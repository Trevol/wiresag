Как управлять сдвигом (translation:Offset) - что бы центр жеста (centroid: Offset) и соотв (?) точка изображения  - совпадали!




- как-то показать ближайший пролет, его длину и расстояние от текущей локации до ближайшего пролета
    - рисовать нормаль (с точками) для ближайшего пролета
       - показывать замеры от текущего положения и до 1) нормали 2) опор
- zoom в центре жеста
- разметка провода в неск. точек - т.к. не всегда понятно где самая нижняя часть - а так можно примерно рассчитать
- double click в режиме разметки изображения пролета делает zoom в месте "щелчка"
- кнопки - / + - zoom в середине экрана

- угол обзора камеры
   - замерить
   - расчитать геометрически
   - можно ли получить параметры камеры программно?

- обрабатывать состояние геолокации (выключено при запуске, включено/включено после запуска приложения)
    - получает ли приложение местоположение при активации приложения (сворачивание и разворачивание)

- кэшировать карту
- Кнопка для перехода на текущее положение
- dfon фотографии на карте + клик с переходом в режим просмотра/аннотации
- сохранить в файл/загрузить из файла

- из разных ракурсов и расстояний от пролета надо получать примерно одинаковые провисания
- если съемка ведется НЕ с нормали к середине пролета???
- какое искажение вносит камера?
    - как оценить? google "калибровка камеры"
    -

- фото:
   - съемка
      - сохранять файл и гео-локацию (и направление в пространстве - потом)
         - показывать на карте (положение + направление)
         - по клику переходить в просмотр/разметку
      - переход в разметку сразу после получения фото
         - с авто-сохранением промежуточных результатов

- расчет провисания:
    - дано:
        - реальное расстояние (метры) между опорами - L
        - расстояние в пикселах между опорами - lp
        - провис в пикселах - sadPx
    - найти:
        - реальный провис (метры) - S
        - угол провиса - a

- карту реализовать, используя Compose-подход
    - Layers {....}
         - Layer1
         - Layer2
    - в слое
       - реализовать вариант прорисовки - используя Compose-подход - декларируя графические примитивы
       - onClick и проч. события




- как определять пролет? Пока это опоры в порядке добавления...
     - надо ли две опоры явно фиксировать как пролет??

- эксперимент:
    +++ фото с предпросмотром
    - показать фото (зум +/-, перетаскивание)
        - клик на фото (координаты в пикселях фото)
    - рисование над фото

- how to increase gps accuracy

- добавление опор
    - рисовать пролеты (отдельным слоем)
    + список опор (mutableStateList)
    + слой для объектов
    - как перерисовывать маркеры? Пока заново пересоздавать...
- точки для фото
    - виртуальные (в определенной ограниченной области вокруг текущего положения) и реальные (с фото)
    - координаты
    - ссылки на соотв. опоры
    - mutableStateList
    - формировать при добавлении опоры
    - отрисовывать в отдельном слое
- фото
    - как сделать? с предпросмотром
    - возвратом фото в приложение - файл? Объект?
- разметка фото?
- remember (in persistent storage) last received location. And use it on app start
- button to place map on current location
    - disabled if no current location yet
- how to place element in arbitrary position on parent - bottom/left for example?

+++ поворот устройства без пересоздания activity
+++ start/stop consume events
+++ convert degrees to degrees/minutes/seconds  (copy from netmarkup_app)



Опора 1: 45.567/23.777
Опора 2: 45.567/23.777  Зафиксировать
Фото:
    - выход на позицию + фото
Разметка фото:
    - Выбор опор
    - Выбор точки на проводе
    - вычисление провисания